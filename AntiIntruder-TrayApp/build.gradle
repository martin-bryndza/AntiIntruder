apply plugin: 'java'
apply plugin:'application'
apply plugin: 'base'
apply plugin: 'maven'

sourceCompatibility = '1.7'
[compileJava, compileTestJava]*.options*.encoding = 'UTF-8'

if (!hasProperty('mainClass')) {
    ext.mainClass = 'eu.bato.anyoffice.trayapp.Main'
}
mainClassName = "eu.bato.anyoffice.trayapp.Main"

repositories {
    mavenCentral();
    mavenLocal();
}

dependencies {
    //slf4j
    compile group: 'org.slf4j', name: 'slf4j-api', version: '1.7.+'
    compile 'ch.qos.logback:logback-classic:1.1.2'
    compile 'ch.qos.logback:logback-core:1.1.2'

    //spring
    compile 'org.springframework:spring-webmvc:4.1.5.RELEASE'
    compile 'org.apache.httpcomponents:httpclient:4.3.5'
    
    compile 'com.fasterxml.jackson.core:jackson-annotations:2.3.3'
    compile 'com.fasterxml:jackson-xml-databind:0.6.2'
    
    //JSON
    compile 'com.googlecode.json-simple:json-simple:1.1'
    
    //JNA
    compile 'net.java.dev.jna:jna:4.1.0'
    compile 'net.java.dev.jna:jna-platform:4.1.0'
        
    testCompile group: 'junit', name: 'junit', version: '4.10'
}

task fatJar(type: Jar) {
    manifest {
        attributes (
                "Manifest-Version": "0.1-SNAPSHOT",
                "Implementation-Vendor": "Martin Bryndza",
                "Implementation-Title": "Any Office - Client ${version}",
                "Implementation-Version": '${version}',
                "Build-Date": new Date(),
                'Main-Class': 'eu.bato.anyoffice.trayapp.Main'
        )
    }
    archiveName = "anyoffice-client.jar"
    destinationDir = file("dist")
    from { configurations.compile.collect { it.isDirectory() ? it : zipTree(it) } }
    with jar
}

jar {
    manifest {
        attributes (
                "Manifest-Version": "0.1-SNAPSHOT",
                "Implementation-Vendor": "Martin Bryndza",
                "Implementation-Title": "Any Office - Client ${version}",
                "Implementation-Version": '${version}',
                "Build-Date": new Date(),
                'Main-Class': 'eu.bato.anyoffice.trayapp.Main'
        )
    }
    archiveName = "anyoffice-client.jar"
    destinationDir = file("deploy")
}

task preparePropertiesFiles(type: Copy){
//    description "Copies files needed to pack into zip, that will be deployed"
//    from fileTree("${rootDir}/AntiIntruder-TrayApp")
////    includes = ["conf/client.properties", "images/**"]
//    into("dist")
}

task pack(type: Zip, dependsOn:["preparePropertiesFiles", "fatJar"]) {
    description = "Creates .zip file ready to be deployed"
    archiveName = "anyoffice-client-runnable.zip"
    from("dist")
    exclude("*.log")
    destinationDir = file("deploy")
}

clean {
    delete("dist")
    delete("deploy")
}
